// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaBox.Storing.Databases;

namespace PizzaBox.Storing.Migrations
{
    [DbContext(typeof(PizzaBoxDbContext))]
    [Migration("20200323232235_testmigration")]
    partial class testmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaBox.Domain.Models.Crust", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Crust");

                    b.HasData(
                        new
                        {
                            Id = 637205845546428471L,
                            Name = "Crunchy Thin Crust",
                            Price = 1.00m
                        },
                        new
                        {
                            Id = 637205845546453156L,
                            Name = "Hand Tossed",
                            Price = 1.00m
                        },
                        new
                        {
                            Id = 637205845546453285L,
                            Name = "Multigrain",
                            Price = 1.00m
                        },
                        new
                        {
                            Id = 637205845546453301L,
                            Name = "Stuffed Crust",
                            Price = 3.00m
                        },
                        new
                        {
                            Id = 637205845546453313L,
                            Name = "Deep Dish",
                            Price = 2.00m
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TimeOrdered")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Pizza", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("CrustId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SizeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CrustId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SizeId");

                    b.ToTable("Pizza");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.PizzaTopping", b =>
                {
                    b.Property<long>("PizzaId")
                        .HasColumnType("bigint");

                    b.Property<long>("ToppingId")
                        .HasColumnType("bigint");

                    b.HasKey("PizzaId", "ToppingId");

                    b.HasIndex("ToppingId");

                    b.ToTable("PizzaTopping");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Size", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Size");

                    b.HasData(
                        new
                        {
                            Id = 637205845546473312L,
                            Name = "Large",
                            Price = 17.95m
                        },
                        new
                        {
                            Id = 637205845546473979L,
                            Name = "Regular",
                            Price = 12.95m
                        },
                        new
                        {
                            Id = 637205845546474003L,
                            Name = "Small",
                            Price = 9.95m
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Store", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            Id = 637205845546482583L,
                            Address = "12345 Streat st, Arlington, Texas",
                            Name = "Best Pizza",
                            Password = "Password1",
                            Username = "store1"
                        },
                        new
                        {
                            Id = 637205845546483797L,
                            Address = "12346 Streat st, Arlington, Texas",
                            Name = "Worst Pizza",
                            Password = "Password2",
                            Username = "store2"
                        },
                        new
                        {
                            Id = 637205845546483845L,
                            Address = "12347 Streat st, Arlington, Texase",
                            Name = "Pizzeria",
                            Password = "Password3",
                            Username = "store3"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Topping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ToppingType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Topping");

                    b.HasData(
                        new
                        {
                            Id = 637205845546474791L,
                            Name = "Mozzarella Cheese",
                            Price = 0.25m,
                            ToppingType = 0
                        },
                        new
                        {
                            Id = 637205845546475133L,
                            Name = "Parmesan Cheese",
                            Price = 0.50m,
                            ToppingType = 0
                        },
                        new
                        {
                            Id = 637205845546475160L,
                            Name = "Feta Cheese",
                            Price = 0.75m,
                            ToppingType = 0
                        },
                        new
                        {
                            Id = 637205845546475163L,
                            Name = "Tomato Sauce",
                            Price = 0.25m,
                            ToppingType = 1
                        },
                        new
                        {
                            Id = 637205845546475166L,
                            Name = "Alfredo Sauce",
                            Price = 0.50m,
                            ToppingType = 1
                        },
                        new
                        {
                            Id = 637205845546475169L,
                            Name = "Pesto Sauce",
                            Price = 1.00m,
                            ToppingType = 1
                        },
                        new
                        {
                            Id = 637205845546475172L,
                            Name = "Pepperoni",
                            Price = 1.00m,
                            ToppingType = 2
                        },
                        new
                        {
                            Id = 637205845546475176L,
                            Name = "Italian Sausage",
                            Price = 1.50m,
                            ToppingType = 2
                        },
                        new
                        {
                            Id = 637205845546475179L,
                            Name = "Mild Sausage",
                            Price = 1.50m,
                            ToppingType = 2
                        },
                        new
                        {
                            Id = 637205845546475182L,
                            Name = "Ham",
                            Price = 1.50m,
                            ToppingType = 2
                        },
                        new
                        {
                            Id = 637205845546475184L,
                            Name = "Beef",
                            Price = 1.50m,
                            ToppingType = 2
                        },
                        new
                        {
                            Id = 637205845546475187L,
                            Name = "Bacon Crumble",
                            Price = 2.00m,
                            ToppingType = 2
                        },
                        new
                        {
                            Id = 637205845546475190L,
                            Name = "Grilled Chicken",
                            Price = 3.00m,
                            ToppingType = 2
                        },
                        new
                        {
                            Id = 637205845546475194L,
                            Name = "Pineapple",
                            Price = 0.75m,
                            ToppingType = 2
                        },
                        new
                        {
                            Id = 637205845546475197L,
                            Name = "Green Pepper",
                            Price = 0.75m,
                            ToppingType = 3
                        },
                        new
                        {
                            Id = 637205845546475200L,
                            Name = "Hot Peppers",
                            Price = 0.75m,
                            ToppingType = 3
                        },
                        new
                        {
                            Id = 637205845546475205L,
                            Name = "Jalapeno",
                            Price = 0.75m,
                            ToppingType = 3
                        },
                        new
                        {
                            Id = 637205845546475208L,
                            Name = "Tomato",
                            Price = 0.75m,
                            ToppingType = 3
                        },
                        new
                        {
                            Id = 637205845546475210L,
                            Name = "Marinated Tomatoes",
                            Price = 0.75m,
                            ToppingType = 3
                        },
                        new
                        {
                            Id = 637205845546475213L,
                            Name = "Mushrooms",
                            Price = 0.75m,
                            ToppingType = 3
                        },
                        new
                        {
                            Id = 637205845546475216L,
                            Name = "Olives",
                            Price = 0.75m,
                            ToppingType = 3
                        },
                        new
                        {
                            Id = 637205845546475219L,
                            Name = "Red Onion",
                            Price = 0.75m,
                            ToppingType = 3
                        },
                        new
                        {
                            Id = 637205845546475222L,
                            Name = "Roasted Red Pepper",
                            Price = 0.75m,
                            ToppingType = 3
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 637205845546476358L,
                            Name = "Jesus",
                            Password = "Password12345",
                            Username = "jesus"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Order", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Store", "Store")
                        .WithMany("Orders")
                        .HasForeignKey("StoreId");

                    b.HasOne("PizzaBox.Domain.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Pizza", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Crust", "Crust")
                        .WithMany("Pizzas")
                        .HasForeignKey("CrustId");

                    b.HasOne("PizzaBox.Domain.Models.Order", "Order")
                        .WithMany("Pizzas")
                        .HasForeignKey("OrderId");

                    b.HasOne("PizzaBox.Domain.Models.Size", "Size")
                        .WithMany("Pizzas")
                        .HasForeignKey("SizeId");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.PizzaTopping", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Pizza", "Pizza")
                        .WithMany("PizzaToppings")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Models.Topping", "Topping")
                        .WithMany("PizzaToppings")
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
